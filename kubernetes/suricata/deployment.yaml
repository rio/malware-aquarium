apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: suricata
  name: suricata
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: suricata
  template:
    metadata:
      labels:
        app.kubernetes.io/name: suricata
        kubernetes.io/egress-bandwidth: "10M"
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "malware-network-static",
              "namespace": "vms",
              "interface": "eth1",
              "ips": [
                "10.244.0.254/24"
              ]
            }
          ]
    spec:
      serviceAccountName: suricata
      initContainers:
        - name: install-iptable-rules
          image: docker.io/jasonish/suricata:5.0
          command: ["/bin/bash", "-c"]
          args:
          # configures the suricata pod to act as a router applying NAT between
          # the pod network and the malware network.
          - |
            set -x
            dnf install -qy iptables
            iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
            iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
            iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT
          securityContext:
            privileged: true
      containers:
        - name: suricata
          image: docker.io/jasonish/suricata:5.0
          command:
            - /usr/bin/suricata
          args:
          - -i
          - eth1
          - -v
          securityContext:
            privileged: true
            # capabilities:
            #   drop:
            #   - ALL
            #   add:
            #   # this list is based on inspektor gadget's trace output while running
            #   # suricata in privileged mode.
            #   - CAP_SYS_ADMIN
            #   - CAP_NET_ADMIN
            #   - CAP_NET_RAW
          resources:
            requests:
              cpu: 4000m
              memory: 16Gi
            limits:
              cpu: 4000m
              memory: 16Gi
          volumeMounts:
          - name: suricata-config
            mountPath: /etc/suricata/suricata.yaml
            subPath: suricata.yaml
        - name: coredns
          image: docker.io/coredns/coredns:1.9.3
          args:
          - -conf=/etc/coredns/Coredns
          ports:
          - name: dns
            containerPort: 53
          volumeMounts:
          - name: coredns-config
            mountPath: /etc/coredns
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
      volumes:
        - name: suricata-config
          configMap:
            name: suricata
        - name: coredns-config
          configMap:
            name: coredns
